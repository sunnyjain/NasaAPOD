// Generated by Dagger (https://google.github.io/dagger).
package com.example.nasapod.viewmodel;

import androidx.lifecycle.ViewModel;
import dagger.internal.Factory;
import java.util.Map;
import javax.inject.Provider;

public final class NasaPODViewModelFactory_Factory implements Factory<NasaPODViewModelFactory> {
  private final Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> creatorsProvider;

  public NasaPODViewModelFactory_Factory(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> creatorsProvider) {
    this.creatorsProvider = creatorsProvider;
  }

  @Override
  public NasaPODViewModelFactory get() {
    return provideInstance(creatorsProvider);
  }

  public static NasaPODViewModelFactory provideInstance(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> creatorsProvider) {
    return new NasaPODViewModelFactory(creatorsProvider.get());
  }

  public static NasaPODViewModelFactory_Factory create(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> creatorsProvider) {
    return new NasaPODViewModelFactory_Factory(creatorsProvider);
  }

  public static NasaPODViewModelFactory newNasaPODViewModelFactory(
      Map<Class<? extends ViewModel>, Provider<ViewModel>> creators) {
    return new NasaPODViewModelFactory(creators);
  }
}
